-- drop table IF EXISTS users, company, item, keyword, parametr cascade;
-- create table users(
--                            id int PRIMARY KEY generated by default as identity,
--                            username varchar(100) not null unique ,
--                            password varchar(255) not null,
--                            email varchar(100) not null unique ,
--                            balance decimal,
--                            role varchar(20) not null,
--                            status boolean
-- );
-- create table company(
--                      id int PRIMARY KEY generated by default as identity,
--                      title varchar(100) not null unique ,
--                      description varchar(255) not null,
--                      logo varchar(100) not null,
--                      user_id int REFERENCES users(id) ON DELETE CASCADE
-- );
-- create table item(
--                         id int PRIMARY KEY generated by default as identity,
--                         title varchar(100) not null unique ,
--                         description varchar(255) not null,
--                         price decimal check (price > 0),
--                         quantiy int,
--                         discount decimal ,
--                         review varchar(500),
--                         rating decimal check (rating > 0),
--                         company int REFERENCES company(id) ON DELETE CASCADE
-- );


--вспомогательная таблица ключевых слов Item сохранение списка Set
-- @ElementCollection
--     @CollectionTable(name="keyword", joinColumns = @JoinColumn(name = "item_id"))
--     @Column(name = "word")
-- create table keyword(
--                      item_id int ,
--                      word varchar(100)
--
-- );

--вспомогательная таблица параметров Item сохранение мапы Vap<?,?>
-- @ElementCollection
--     @CollectionTable(name="keyword", joinColumns = @JoinColumn(name = "item_id"))
--     @Column(name = "word")
-- create table parametr(
--                         item_id int ,
--                         key_parametr varchar(100),
--                         value_parametr varchar(100)
--
-- );

-- create table orders(
--                      id int PRIMARY KEY generated by default as identity,
--                      datecreate timestamp not null ,
--                      user_id int REFERENCES users(id) ON DELETE no action
-- );

-- create table order_item(
--                       order_id int REFERENCES orders(id) ON DELETE no action,
--                       item_id int REFERENCES item(id) ON DELETE no action,
--                       primary key (order_id, item_id)
-- );


